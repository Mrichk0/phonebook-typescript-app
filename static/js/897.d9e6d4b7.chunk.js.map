{"version":3,"file":"static/js/897.d9e6d4b7.chunk.js","mappings":"iMAiBA,MAAMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAgEZ,EA7DyBC,KACvB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAwB,IAAKP,IAEjDQ,GAAWC,EAAAA,EAAAA,KAEXC,EAA4DC,IAChEL,GAAUM,IAAI,IACTA,EACH,CAACD,EAAEE,OAAOZ,MAAOU,EAAEE,OAAOC,SACzB,GAQC,KAAEb,EAAI,SAAEE,EAAQ,MAAED,GAAUG,EAClC,OACEU,EAAAA,EAAAA,MAACC,EAAAA,GAAa,CAACC,SAR8CN,IAC7DA,EAAEO,iBACFV,GAASW,EAAAA,EAAAA,IAAOd,IAChBC,EAAS,IAAKN,GAAe,EAKSoB,SAAA,EACpCL,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAD,SAAA,EACRE,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,QAAQ,OAAMJ,SAAC,UAC1BE,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CACRX,MAAOb,EACPyB,SAAUhB,EACViB,GAAG,OACHC,KAAK,OACL3B,KAAK,OACL4B,UAAQ,EACRC,YAAY,aAGhBf,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAD,SAAA,EACRE,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,QAAQ,QAAOJ,SAAC,WAC3BE,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CACRX,MAAOZ,EACPwB,SAAUhB,EACViB,GAAG,QACHC,KAAK,OACL3B,KAAK,QACL4B,UAAQ,EACRC,YAAY,cAGhBf,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAD,SAAA,EACRE,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,QAAQ,WAAUJ,SAAC,cAC9BE,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CACRX,MAAOX,EACPuB,SAAUhB,EACViB,GAAG,WACHC,KAAK,WACL3B,KAAK,WACL4B,UAAQ,EACRC,YAAY,0CAGhBR,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CAACH,KAAK,SAAQR,SAAC,eACZ,E,sBCxEpB,MAkBA,EAlByBY,KACvB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAgB7B,GAAUA,EAAM8B,MAAMC,EAAAA,IAEpDC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,KACJN,GACFI,EAAS,cACX,GACC,CAACJ,EAASI,KAGXf,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAAClB,EAAY,KACT,C,sGCpBH,MAAMY,EAAgBwB,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0LAIlBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,EAAE,IAOvC1B,EAAYmB,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kDAKtBpB,EAAYiB,EAAAA,GAAOU,MAAKC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mDAKxBlB,EAAYe,EAAAA,GAAOY,MAAKC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wNASxBW,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMC,OAAOS,SAAS,IAIrCxB,EAAaS,EAAAA,GAAOgB,OAAMC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6MAEjBe,IAAA,IAAC,MAAEb,GAAOa,EAAA,OAAKb,EAAMC,OAAOa,OAAO,G","sources":["components/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.tsx","styles/form.styles.ts"],"sourcesContent":["import { FC, useState } from \"react\";\nimport { signup } from \"../../store/AuthReduсe/authOperation\";\nimport { useAppDispatch } from \"../../hooks/storeHooks\";\n\nimport {\n  FormContainer,\n  FormGroup,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from \"../../styles/form.styles\";\n\nexport interface IInitialState {\n  name: string;\n  email: string;\n  password: string;\n}\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst RegisterForm: FC = () => {\n  const [state, setState] = useState<IInitialState>({ ...initialState });\n\n  const dispatch = useAppDispatch();\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    dispatch(signup(state));\n    setState({ ...initialState });\n  };\n\n  const { name, password, email } = state;\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormGroup>\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <FormInput\n          value={name}\n          onChange={handleChange}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"name\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormLabel htmlFor=\"email\">Email</FormLabel>\n        <FormInput\n          value={email}\n          onChange={handleChange}\n          id=\"email\"\n          type=\"text\"\n          name=\"email\"\n          required\n          placeholder=\"email\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormLabel htmlFor=\"password\">Password</FormLabel>\n        <FormInput\n          value={password}\n          onChange={handleChange}\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          required\n          placeholder=\"password (more than 8 characters)\"\n        />\n      </FormGroup>\n      <FormButton type=\"submit\">Register</FormButton>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;\n","import { FC, useEffect } from \"react\";\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\nimport { useAppSelector } from \"../../hooks/storeHooks\";\n// import PhoneBook from \"../../components/PhoneBook\";\n\nimport { shallowEqual } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst RegisterPage: FC = () => {\n  const { isLogin } = useAppSelector((state) => state.auth, shallowEqual);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLogin) {\n      navigate(\"/phone-book\");\n    }\n  }, [isLogin, navigate]);\n\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import styled from \"styled-components\";\n\nexport const FormContainer = styled.form`\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.colors.bg};\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 20px;\n  width: 100%;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  font-weight: bold;\n`;\n\nexport const FormInput = styled.input`\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 15px;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  font-size: 14px;\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n\nexport const FormButton = styled.button`\n  padding: 10px 25px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  font-weight: bold;\n  color: black;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n"],"names":["initialState","name","email","password","RegisterForm","state","setState","useState","dispatch","useAppDispatch","handleChange","e","prev","target","value","_jsxs","FormContainer","onSubmit","preventDefault","signup","children","FormGroup","_jsx","FormLabel","htmlFor","FormInput","onChange","id","type","required","placeholder","FormButton","RegisterPage","isLogin","useAppSelector","auth","shallowEqual","navigate","useNavigate","useEffect","styled","form","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","bg","div","_templateObject2","label","_templateObject3","input","_templateObject4","_ref2","secondary","button","_templateObject5","_ref3","primary"],"sourceRoot":""}